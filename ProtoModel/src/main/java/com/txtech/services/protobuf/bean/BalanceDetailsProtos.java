// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/bean/balanceDetails.proto

package com.txtech.services.protobuf.bean;

public final class BalanceDetailsProtos {
  private BalanceDetailsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BalanceDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.bean.BalanceDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double doubleingPL = 1;</code>
     */
    boolean hasDoubleingPL();
    /**
     * <code>optional double doubleingPL = 1;</code>
     */
    double getDoubleingPL();

    /**
     * <code>optional int64 settled = 2;</code>
     */
    boolean hasSettled();
    /**
     * <code>optional int64 settled = 2;</code>
     */
    long getSettled();

    /**
     * <code>optional double initMargin = 3;</code>
     */
    boolean hasInitMargin();
    /**
     * <code>optional double initMargin = 3;</code>
     */
    double getInitMargin();

    /**
     * <code>optional double maintenanceMargin = 4;</code>
     */
    boolean hasMaintenanceMargin();
    /**
     * <code>optional double maintenanceMargin = 4;</code>
     */
    double getMaintenanceMargin();

    /**
     * <code>optional double surplus = 5;</code>
     */
    boolean hasSurplus();
    /**
     * <code>optional double surplus = 5;</code>
     */
    double getSurplus();

    /**
     * <code>optional double holdFund = 6;</code>
     */
    boolean hasHoldFund();
    /**
     * <code>optional double holdFund = 6;</code>
     */
    double getHoldFund();

    /**
     * <code>optional double totalCollateral = 7;</code>
     */
    boolean hasTotalCollateral();
    /**
     * <code>optional double totalCollateral = 7;</code>
     */
    double getTotalCollateral();

    /**
     * <code>optional double tradingPL = 8;</code>
     */
    boolean hasTradingPL();
    /**
     * <code>optional double tradingPL = 8;</code>
     */
    double getTradingPL();

    /**
     * <code>optional double openBalance = 9;</code>
     */
    boolean hasOpenBalance();
    /**
     * <code>optional double openBalance = 9;</code>
     */
    double getOpenBalance();

    /**
     * <code>optional double commission = 10;</code>
     */
    boolean hasCommission();
    /**
     * <code>optional double commission = 10;</code>
     */
    double getCommission();

    /**
     * <code>optional double tradingFeeLevies = 11;</code>
     */
    boolean hasTradingFeeLevies();
    /**
     * <code>optional double tradingFeeLevies = 11;</code>
     */
    double getTradingFeeLevies();

    /**
     * <code>optional double deposit = 12;</code>
     */
    boolean hasDeposit();
    /**
     * <code>optional double deposit = 12;</code>
     */
    double getDeposit();

    /**
     * <code>optional double withdrawal = 13;</code>
     */
    boolean hasWithdrawal();
    /**
     * <code>optional double withdrawal = 13;</code>
     */
    double getWithdrawal();

    /**
     * <code>optional double totalEquity = 14;</code>
     */
    boolean hasTotalEquity();
    /**
     * <code>optional double totalEquity = 14;</code>
     */
    double getTotalEquity();

    /**
     * <code>optional int64 balanceBF = 15;</code>
     */
    boolean hasBalanceBF();
    /**
     * <code>optional int64 balanceBF = 15;</code>
     */
    long getBalanceBF();

    /**
     * <code>optional int64 BalanceCF = 16;</code>
     */
    boolean hasBalanceCF();
    /**
     * <code>optional int64 BalanceCF = 16;</code>
     */
    long getBalanceCF();

    /**
     * <code>optional double bankdoubleFund = 17;</code>
     */
    boolean hasBankdoubleFund();
    /**
     * <code>optional double bankdoubleFund = 17;</code>
     */
    double getBankdoubleFund();

    /**
     * <code>optional double tradingLimit = 18;</code>
     */
    boolean hasTradingLimit();
    /**
     * <code>optional double tradingLimit = 18;</code>
     */
    double getTradingLimit();
  }
  /**
   * Protobuf type {@code protobuf.bean.BalanceDetails}
   */
  public  static final class BalanceDetails extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.bean.BalanceDetails)
      BalanceDetailsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BalanceDetails.newBuilder() to construct.
    private BalanceDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BalanceDetails() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BalanceDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              doubleingPL_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              settled_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              initMargin_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              maintenanceMargin_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              surplus_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              holdFund_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              totalCollateral_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              tradingPL_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              openBalance_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              commission_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              tradingFeeLevies_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              deposit_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              withdrawal_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              totalEquity_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              balanceBF_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              balanceCF_ = input.readInt64();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              bankdoubleFund_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00020000;
              tradingLimit_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.txtech.services.protobuf.bean.BalanceDetailsProtos.internal_static_protobuf_bean_BalanceDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.txtech.services.protobuf.bean.BalanceDetailsProtos.internal_static_protobuf_bean_BalanceDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.class, com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.Builder.class);
    }

    private int bitField0_;
    public static final int DOUBLEINGPL_FIELD_NUMBER = 1;
    private double doubleingPL_;
    /**
     * <code>optional double doubleingPL = 1;</code>
     */
    public boolean hasDoubleingPL() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double doubleingPL = 1;</code>
     */
    public double getDoubleingPL() {
      return doubleingPL_;
    }

    public static final int SETTLED_FIELD_NUMBER = 2;
    private long settled_;
    /**
     * <code>optional int64 settled = 2;</code>
     */
    public boolean hasSettled() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 settled = 2;</code>
     */
    public long getSettled() {
      return settled_;
    }

    public static final int INITMARGIN_FIELD_NUMBER = 3;
    private double initMargin_;
    /**
     * <code>optional double initMargin = 3;</code>
     */
    public boolean hasInitMargin() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double initMargin = 3;</code>
     */
    public double getInitMargin() {
      return initMargin_;
    }

    public static final int MAINTENANCEMARGIN_FIELD_NUMBER = 4;
    private double maintenanceMargin_;
    /**
     * <code>optional double maintenanceMargin = 4;</code>
     */
    public boolean hasMaintenanceMargin() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double maintenanceMargin = 4;</code>
     */
    public double getMaintenanceMargin() {
      return maintenanceMargin_;
    }

    public static final int SURPLUS_FIELD_NUMBER = 5;
    private double surplus_;
    /**
     * <code>optional double surplus = 5;</code>
     */
    public boolean hasSurplus() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double surplus = 5;</code>
     */
    public double getSurplus() {
      return surplus_;
    }

    public static final int HOLDFUND_FIELD_NUMBER = 6;
    private double holdFund_;
    /**
     * <code>optional double holdFund = 6;</code>
     */
    public boolean hasHoldFund() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double holdFund = 6;</code>
     */
    public double getHoldFund() {
      return holdFund_;
    }

    public static final int TOTALCOLLATERAL_FIELD_NUMBER = 7;
    private double totalCollateral_;
    /**
     * <code>optional double totalCollateral = 7;</code>
     */
    public boolean hasTotalCollateral() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double totalCollateral = 7;</code>
     */
    public double getTotalCollateral() {
      return totalCollateral_;
    }

    public static final int TRADINGPL_FIELD_NUMBER = 8;
    private double tradingPL_;
    /**
     * <code>optional double tradingPL = 8;</code>
     */
    public boolean hasTradingPL() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double tradingPL = 8;</code>
     */
    public double getTradingPL() {
      return tradingPL_;
    }

    public static final int OPENBALANCE_FIELD_NUMBER = 9;
    private double openBalance_;
    /**
     * <code>optional double openBalance = 9;</code>
     */
    public boolean hasOpenBalance() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional double openBalance = 9;</code>
     */
    public double getOpenBalance() {
      return openBalance_;
    }

    public static final int COMMISSION_FIELD_NUMBER = 10;
    private double commission_;
    /**
     * <code>optional double commission = 10;</code>
     */
    public boolean hasCommission() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional double commission = 10;</code>
     */
    public double getCommission() {
      return commission_;
    }

    public static final int TRADINGFEELEVIES_FIELD_NUMBER = 11;
    private double tradingFeeLevies_;
    /**
     * <code>optional double tradingFeeLevies = 11;</code>
     */
    public boolean hasTradingFeeLevies() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional double tradingFeeLevies = 11;</code>
     */
    public double getTradingFeeLevies() {
      return tradingFeeLevies_;
    }

    public static final int DEPOSIT_FIELD_NUMBER = 12;
    private double deposit_;
    /**
     * <code>optional double deposit = 12;</code>
     */
    public boolean hasDeposit() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional double deposit = 12;</code>
     */
    public double getDeposit() {
      return deposit_;
    }

    public static final int WITHDRAWAL_FIELD_NUMBER = 13;
    private double withdrawal_;
    /**
     * <code>optional double withdrawal = 13;</code>
     */
    public boolean hasWithdrawal() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional double withdrawal = 13;</code>
     */
    public double getWithdrawal() {
      return withdrawal_;
    }

    public static final int TOTALEQUITY_FIELD_NUMBER = 14;
    private double totalEquity_;
    /**
     * <code>optional double totalEquity = 14;</code>
     */
    public boolean hasTotalEquity() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional double totalEquity = 14;</code>
     */
    public double getTotalEquity() {
      return totalEquity_;
    }

    public static final int BALANCEBF_FIELD_NUMBER = 15;
    private long balanceBF_;
    /**
     * <code>optional int64 balanceBF = 15;</code>
     */
    public boolean hasBalanceBF() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional int64 balanceBF = 15;</code>
     */
    public long getBalanceBF() {
      return balanceBF_;
    }

    public static final int BALANCECF_FIELD_NUMBER = 16;
    private long balanceCF_;
    /**
     * <code>optional int64 BalanceCF = 16;</code>
     */
    public boolean hasBalanceCF() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional int64 BalanceCF = 16;</code>
     */
    public long getBalanceCF() {
      return balanceCF_;
    }

    public static final int BANKDOUBLEFUND_FIELD_NUMBER = 17;
    private double bankdoubleFund_;
    /**
     * <code>optional double bankdoubleFund = 17;</code>
     */
    public boolean hasBankdoubleFund() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional double bankdoubleFund = 17;</code>
     */
    public double getBankdoubleFund() {
      return bankdoubleFund_;
    }

    public static final int TRADINGLIMIT_FIELD_NUMBER = 18;
    private double tradingLimit_;
    /**
     * <code>optional double tradingLimit = 18;</code>
     */
    public boolean hasTradingLimit() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional double tradingLimit = 18;</code>
     */
    public double getTradingLimit() {
      return tradingLimit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, doubleingPL_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, settled_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, initMargin_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, maintenanceMargin_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, surplus_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, holdFund_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, totalCollateral_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, tradingPL_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, openBalance_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, commission_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, tradingFeeLevies_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeDouble(12, deposit_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeDouble(13, withdrawal_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeDouble(14, totalEquity_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeInt64(15, balanceBF_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt64(16, balanceCF_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeDouble(17, bankdoubleFund_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeDouble(18, tradingLimit_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleingPL_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, settled_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, initMargin_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, maintenanceMargin_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, surplus_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, holdFund_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, totalCollateral_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, tradingPL_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, openBalance_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, commission_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, tradingFeeLevies_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, deposit_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, withdrawal_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, totalEquity_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, balanceBF_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, balanceCF_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, bankdoubleFund_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, tradingLimit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails)) {
        return super.equals(obj);
      }
      com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails other = (com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails) obj;

      if (hasDoubleingPL() != other.hasDoubleingPL()) return false;
      if (hasDoubleingPL()) {
        if (java.lang.Double.doubleToLongBits(getDoubleingPL())
            != java.lang.Double.doubleToLongBits(
                other.getDoubleingPL())) return false;
      }
      if (hasSettled() != other.hasSettled()) return false;
      if (hasSettled()) {
        if (getSettled()
            != other.getSettled()) return false;
      }
      if (hasInitMargin() != other.hasInitMargin()) return false;
      if (hasInitMargin()) {
        if (java.lang.Double.doubleToLongBits(getInitMargin())
            != java.lang.Double.doubleToLongBits(
                other.getInitMargin())) return false;
      }
      if (hasMaintenanceMargin() != other.hasMaintenanceMargin()) return false;
      if (hasMaintenanceMargin()) {
        if (java.lang.Double.doubleToLongBits(getMaintenanceMargin())
            != java.lang.Double.doubleToLongBits(
                other.getMaintenanceMargin())) return false;
      }
      if (hasSurplus() != other.hasSurplus()) return false;
      if (hasSurplus()) {
        if (java.lang.Double.doubleToLongBits(getSurplus())
            != java.lang.Double.doubleToLongBits(
                other.getSurplus())) return false;
      }
      if (hasHoldFund() != other.hasHoldFund()) return false;
      if (hasHoldFund()) {
        if (java.lang.Double.doubleToLongBits(getHoldFund())
            != java.lang.Double.doubleToLongBits(
                other.getHoldFund())) return false;
      }
      if (hasTotalCollateral() != other.hasTotalCollateral()) return false;
      if (hasTotalCollateral()) {
        if (java.lang.Double.doubleToLongBits(getTotalCollateral())
            != java.lang.Double.doubleToLongBits(
                other.getTotalCollateral())) return false;
      }
      if (hasTradingPL() != other.hasTradingPL()) return false;
      if (hasTradingPL()) {
        if (java.lang.Double.doubleToLongBits(getTradingPL())
            != java.lang.Double.doubleToLongBits(
                other.getTradingPL())) return false;
      }
      if (hasOpenBalance() != other.hasOpenBalance()) return false;
      if (hasOpenBalance()) {
        if (java.lang.Double.doubleToLongBits(getOpenBalance())
            != java.lang.Double.doubleToLongBits(
                other.getOpenBalance())) return false;
      }
      if (hasCommission() != other.hasCommission()) return false;
      if (hasCommission()) {
        if (java.lang.Double.doubleToLongBits(getCommission())
            != java.lang.Double.doubleToLongBits(
                other.getCommission())) return false;
      }
      if (hasTradingFeeLevies() != other.hasTradingFeeLevies()) return false;
      if (hasTradingFeeLevies()) {
        if (java.lang.Double.doubleToLongBits(getTradingFeeLevies())
            != java.lang.Double.doubleToLongBits(
                other.getTradingFeeLevies())) return false;
      }
      if (hasDeposit() != other.hasDeposit()) return false;
      if (hasDeposit()) {
        if (java.lang.Double.doubleToLongBits(getDeposit())
            != java.lang.Double.doubleToLongBits(
                other.getDeposit())) return false;
      }
      if (hasWithdrawal() != other.hasWithdrawal()) return false;
      if (hasWithdrawal()) {
        if (java.lang.Double.doubleToLongBits(getWithdrawal())
            != java.lang.Double.doubleToLongBits(
                other.getWithdrawal())) return false;
      }
      if (hasTotalEquity() != other.hasTotalEquity()) return false;
      if (hasTotalEquity()) {
        if (java.lang.Double.doubleToLongBits(getTotalEquity())
            != java.lang.Double.doubleToLongBits(
                other.getTotalEquity())) return false;
      }
      if (hasBalanceBF() != other.hasBalanceBF()) return false;
      if (hasBalanceBF()) {
        if (getBalanceBF()
            != other.getBalanceBF()) return false;
      }
      if (hasBalanceCF() != other.hasBalanceCF()) return false;
      if (hasBalanceCF()) {
        if (getBalanceCF()
            != other.getBalanceCF()) return false;
      }
      if (hasBankdoubleFund() != other.hasBankdoubleFund()) return false;
      if (hasBankdoubleFund()) {
        if (java.lang.Double.doubleToLongBits(getBankdoubleFund())
            != java.lang.Double.doubleToLongBits(
                other.getBankdoubleFund())) return false;
      }
      if (hasTradingLimit() != other.hasTradingLimit()) return false;
      if (hasTradingLimit()) {
        if (java.lang.Double.doubleToLongBits(getTradingLimit())
            != java.lang.Double.doubleToLongBits(
                other.getTradingLimit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDoubleingPL()) {
        hash = (37 * hash) + DOUBLEINGPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDoubleingPL()));
      }
      if (hasSettled()) {
        hash = (37 * hash) + SETTLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSettled());
      }
      if (hasInitMargin()) {
        hash = (37 * hash) + INITMARGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getInitMargin()));
      }
      if (hasMaintenanceMargin()) {
        hash = (37 * hash) + MAINTENANCEMARGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaintenanceMargin()));
      }
      if (hasSurplus()) {
        hash = (37 * hash) + SURPLUS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSurplus()));
      }
      if (hasHoldFund()) {
        hash = (37 * hash) + HOLDFUND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHoldFund()));
      }
      if (hasTotalCollateral()) {
        hash = (37 * hash) + TOTALCOLLATERAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalCollateral()));
      }
      if (hasTradingPL()) {
        hash = (37 * hash) + TRADINGPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTradingPL()));
      }
      if (hasOpenBalance()) {
        hash = (37 * hash) + OPENBALANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpenBalance()));
      }
      if (hasCommission()) {
        hash = (37 * hash) + COMMISSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCommission()));
      }
      if (hasTradingFeeLevies()) {
        hash = (37 * hash) + TRADINGFEELEVIES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTradingFeeLevies()));
      }
      if (hasDeposit()) {
        hash = (37 * hash) + DEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDeposit()));
      }
      if (hasWithdrawal()) {
        hash = (37 * hash) + WITHDRAWAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getWithdrawal()));
      }
      if (hasTotalEquity()) {
        hash = (37 * hash) + TOTALEQUITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalEquity()));
      }
      if (hasBalanceBF()) {
        hash = (37 * hash) + BALANCEBF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBalanceBF());
      }
      if (hasBalanceCF()) {
        hash = (37 * hash) + BALANCECF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBalanceCF());
      }
      if (hasBankdoubleFund()) {
        hash = (37 * hash) + BANKDOUBLEFUND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBankdoubleFund()));
      }
      if (hasTradingLimit()) {
        hash = (37 * hash) + TRADINGLIMIT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTradingLimit()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.bean.BalanceDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.bean.BalanceDetails)
        com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.txtech.services.protobuf.bean.BalanceDetailsProtos.internal_static_protobuf_bean_BalanceDetails_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.txtech.services.protobuf.bean.BalanceDetailsProtos.internal_static_protobuf_bean_BalanceDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.class, com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.Builder.class);
      }

      // Construct using com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        doubleingPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        settled_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        initMargin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        maintenanceMargin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        surplus_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        holdFund_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalCollateral_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        tradingPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        openBalance_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        commission_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        tradingFeeLevies_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        deposit_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        withdrawal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        totalEquity_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        balanceBF_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        balanceCF_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        bankdoubleFund_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        tradingLimit_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.txtech.services.protobuf.bean.BalanceDetailsProtos.internal_static_protobuf_bean_BalanceDetails_descriptor;
      }

      @java.lang.Override
      public com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails getDefaultInstanceForType() {
        return com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.getDefaultInstance();
      }

      @java.lang.Override
      public com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails build() {
        com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails buildPartial() {
        com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails result = new com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.doubleingPL_ = doubleingPL_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.settled_ = settled_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.initMargin_ = initMargin_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maintenanceMargin_ = maintenanceMargin_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.surplus_ = surplus_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.holdFund_ = holdFund_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.totalCollateral_ = totalCollateral_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.tradingPL_ = tradingPL_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.openBalance_ = openBalance_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.commission_ = commission_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.tradingFeeLevies_ = tradingFeeLevies_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.deposit_ = deposit_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.withdrawal_ = withdrawal_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.totalEquity_ = totalEquity_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.balanceBF_ = balanceBF_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.balanceCF_ = balanceCF_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.bankdoubleFund_ = bankdoubleFund_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.tradingLimit_ = tradingLimit_;
          to_bitField0_ |= 0x00020000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails) {
          return mergeFrom((com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails other) {
        if (other == com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails.getDefaultInstance()) return this;
        if (other.hasDoubleingPL()) {
          setDoubleingPL(other.getDoubleingPL());
        }
        if (other.hasSettled()) {
          setSettled(other.getSettled());
        }
        if (other.hasInitMargin()) {
          setInitMargin(other.getInitMargin());
        }
        if (other.hasMaintenanceMargin()) {
          setMaintenanceMargin(other.getMaintenanceMargin());
        }
        if (other.hasSurplus()) {
          setSurplus(other.getSurplus());
        }
        if (other.hasHoldFund()) {
          setHoldFund(other.getHoldFund());
        }
        if (other.hasTotalCollateral()) {
          setTotalCollateral(other.getTotalCollateral());
        }
        if (other.hasTradingPL()) {
          setTradingPL(other.getTradingPL());
        }
        if (other.hasOpenBalance()) {
          setOpenBalance(other.getOpenBalance());
        }
        if (other.hasCommission()) {
          setCommission(other.getCommission());
        }
        if (other.hasTradingFeeLevies()) {
          setTradingFeeLevies(other.getTradingFeeLevies());
        }
        if (other.hasDeposit()) {
          setDeposit(other.getDeposit());
        }
        if (other.hasWithdrawal()) {
          setWithdrawal(other.getWithdrawal());
        }
        if (other.hasTotalEquity()) {
          setTotalEquity(other.getTotalEquity());
        }
        if (other.hasBalanceBF()) {
          setBalanceBF(other.getBalanceBF());
        }
        if (other.hasBalanceCF()) {
          setBalanceCF(other.getBalanceCF());
        }
        if (other.hasBankdoubleFund()) {
          setBankdoubleFund(other.getBankdoubleFund());
        }
        if (other.hasTradingLimit()) {
          setTradingLimit(other.getTradingLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleingPL_ ;
      /**
       * <code>optional double doubleingPL = 1;</code>
       */
      public boolean hasDoubleingPL() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double doubleingPL = 1;</code>
       */
      public double getDoubleingPL() {
        return doubleingPL_;
      }
      /**
       * <code>optional double doubleingPL = 1;</code>
       */
      public Builder setDoubleingPL(double value) {
        bitField0_ |= 0x00000001;
        doubleingPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double doubleingPL = 1;</code>
       */
      public Builder clearDoubleingPL() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleingPL_ = 0D;
        onChanged();
        return this;
      }

      private long settled_ ;
      /**
       * <code>optional int64 settled = 2;</code>
       */
      public boolean hasSettled() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int64 settled = 2;</code>
       */
      public long getSettled() {
        return settled_;
      }
      /**
       * <code>optional int64 settled = 2;</code>
       */
      public Builder setSettled(long value) {
        bitField0_ |= 0x00000002;
        settled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 settled = 2;</code>
       */
      public Builder clearSettled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        settled_ = 0L;
        onChanged();
        return this;
      }

      private double initMargin_ ;
      /**
       * <code>optional double initMargin = 3;</code>
       */
      public boolean hasInitMargin() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double initMargin = 3;</code>
       */
      public double getInitMargin() {
        return initMargin_;
      }
      /**
       * <code>optional double initMargin = 3;</code>
       */
      public Builder setInitMargin(double value) {
        bitField0_ |= 0x00000004;
        initMargin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double initMargin = 3;</code>
       */
      public Builder clearInitMargin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        initMargin_ = 0D;
        onChanged();
        return this;
      }

      private double maintenanceMargin_ ;
      /**
       * <code>optional double maintenanceMargin = 4;</code>
       */
      public boolean hasMaintenanceMargin() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double maintenanceMargin = 4;</code>
       */
      public double getMaintenanceMargin() {
        return maintenanceMargin_;
      }
      /**
       * <code>optional double maintenanceMargin = 4;</code>
       */
      public Builder setMaintenanceMargin(double value) {
        bitField0_ |= 0x00000008;
        maintenanceMargin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double maintenanceMargin = 4;</code>
       */
      public Builder clearMaintenanceMargin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maintenanceMargin_ = 0D;
        onChanged();
        return this;
      }

      private double surplus_ ;
      /**
       * <code>optional double surplus = 5;</code>
       */
      public boolean hasSurplus() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double surplus = 5;</code>
       */
      public double getSurplus() {
        return surplus_;
      }
      /**
       * <code>optional double surplus = 5;</code>
       */
      public Builder setSurplus(double value) {
        bitField0_ |= 0x00000010;
        surplus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double surplus = 5;</code>
       */
      public Builder clearSurplus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        surplus_ = 0D;
        onChanged();
        return this;
      }

      private double holdFund_ ;
      /**
       * <code>optional double holdFund = 6;</code>
       */
      public boolean hasHoldFund() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double holdFund = 6;</code>
       */
      public double getHoldFund() {
        return holdFund_;
      }
      /**
       * <code>optional double holdFund = 6;</code>
       */
      public Builder setHoldFund(double value) {
        bitField0_ |= 0x00000020;
        holdFund_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double holdFund = 6;</code>
       */
      public Builder clearHoldFund() {
        bitField0_ = (bitField0_ & ~0x00000020);
        holdFund_ = 0D;
        onChanged();
        return this;
      }

      private double totalCollateral_ ;
      /**
       * <code>optional double totalCollateral = 7;</code>
       */
      public boolean hasTotalCollateral() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double totalCollateral = 7;</code>
       */
      public double getTotalCollateral() {
        return totalCollateral_;
      }
      /**
       * <code>optional double totalCollateral = 7;</code>
       */
      public Builder setTotalCollateral(double value) {
        bitField0_ |= 0x00000040;
        totalCollateral_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double totalCollateral = 7;</code>
       */
      public Builder clearTotalCollateral() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalCollateral_ = 0D;
        onChanged();
        return this;
      }

      private double tradingPL_ ;
      /**
       * <code>optional double tradingPL = 8;</code>
       */
      public boolean hasTradingPL() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double tradingPL = 8;</code>
       */
      public double getTradingPL() {
        return tradingPL_;
      }
      /**
       * <code>optional double tradingPL = 8;</code>
       */
      public Builder setTradingPL(double value) {
        bitField0_ |= 0x00000080;
        tradingPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double tradingPL = 8;</code>
       */
      public Builder clearTradingPL() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tradingPL_ = 0D;
        onChanged();
        return this;
      }

      private double openBalance_ ;
      /**
       * <code>optional double openBalance = 9;</code>
       */
      public boolean hasOpenBalance() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double openBalance = 9;</code>
       */
      public double getOpenBalance() {
        return openBalance_;
      }
      /**
       * <code>optional double openBalance = 9;</code>
       */
      public Builder setOpenBalance(double value) {
        bitField0_ |= 0x00000100;
        openBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double openBalance = 9;</code>
       */
      public Builder clearOpenBalance() {
        bitField0_ = (bitField0_ & ~0x00000100);
        openBalance_ = 0D;
        onChanged();
        return this;
      }

      private double commission_ ;
      /**
       * <code>optional double commission = 10;</code>
       */
      public boolean hasCommission() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double commission = 10;</code>
       */
      public double getCommission() {
        return commission_;
      }
      /**
       * <code>optional double commission = 10;</code>
       */
      public Builder setCommission(double value) {
        bitField0_ |= 0x00000200;
        commission_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double commission = 10;</code>
       */
      public Builder clearCommission() {
        bitField0_ = (bitField0_ & ~0x00000200);
        commission_ = 0D;
        onChanged();
        return this;
      }

      private double tradingFeeLevies_ ;
      /**
       * <code>optional double tradingFeeLevies = 11;</code>
       */
      public boolean hasTradingFeeLevies() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional double tradingFeeLevies = 11;</code>
       */
      public double getTradingFeeLevies() {
        return tradingFeeLevies_;
      }
      /**
       * <code>optional double tradingFeeLevies = 11;</code>
       */
      public Builder setTradingFeeLevies(double value) {
        bitField0_ |= 0x00000400;
        tradingFeeLevies_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double tradingFeeLevies = 11;</code>
       */
      public Builder clearTradingFeeLevies() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tradingFeeLevies_ = 0D;
        onChanged();
        return this;
      }

      private double deposit_ ;
      /**
       * <code>optional double deposit = 12;</code>
       */
      public boolean hasDeposit() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional double deposit = 12;</code>
       */
      public double getDeposit() {
        return deposit_;
      }
      /**
       * <code>optional double deposit = 12;</code>
       */
      public Builder setDeposit(double value) {
        bitField0_ |= 0x00000800;
        deposit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double deposit = 12;</code>
       */
      public Builder clearDeposit() {
        bitField0_ = (bitField0_ & ~0x00000800);
        deposit_ = 0D;
        onChanged();
        return this;
      }

      private double withdrawal_ ;
      /**
       * <code>optional double withdrawal = 13;</code>
       */
      public boolean hasWithdrawal() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional double withdrawal = 13;</code>
       */
      public double getWithdrawal() {
        return withdrawal_;
      }
      /**
       * <code>optional double withdrawal = 13;</code>
       */
      public Builder setWithdrawal(double value) {
        bitField0_ |= 0x00001000;
        withdrawal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double withdrawal = 13;</code>
       */
      public Builder clearWithdrawal() {
        bitField0_ = (bitField0_ & ~0x00001000);
        withdrawal_ = 0D;
        onChanged();
        return this;
      }

      private double totalEquity_ ;
      /**
       * <code>optional double totalEquity = 14;</code>
       */
      public boolean hasTotalEquity() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional double totalEquity = 14;</code>
       */
      public double getTotalEquity() {
        return totalEquity_;
      }
      /**
       * <code>optional double totalEquity = 14;</code>
       */
      public Builder setTotalEquity(double value) {
        bitField0_ |= 0x00002000;
        totalEquity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double totalEquity = 14;</code>
       */
      public Builder clearTotalEquity() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalEquity_ = 0D;
        onChanged();
        return this;
      }

      private long balanceBF_ ;
      /**
       * <code>optional int64 balanceBF = 15;</code>
       */
      public boolean hasBalanceBF() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional int64 balanceBF = 15;</code>
       */
      public long getBalanceBF() {
        return balanceBF_;
      }
      /**
       * <code>optional int64 balanceBF = 15;</code>
       */
      public Builder setBalanceBF(long value) {
        bitField0_ |= 0x00004000;
        balanceBF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 balanceBF = 15;</code>
       */
      public Builder clearBalanceBF() {
        bitField0_ = (bitField0_ & ~0x00004000);
        balanceBF_ = 0L;
        onChanged();
        return this;
      }

      private long balanceCF_ ;
      /**
       * <code>optional int64 BalanceCF = 16;</code>
       */
      public boolean hasBalanceCF() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional int64 BalanceCF = 16;</code>
       */
      public long getBalanceCF() {
        return balanceCF_;
      }
      /**
       * <code>optional int64 BalanceCF = 16;</code>
       */
      public Builder setBalanceCF(long value) {
        bitField0_ |= 0x00008000;
        balanceCF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BalanceCF = 16;</code>
       */
      public Builder clearBalanceCF() {
        bitField0_ = (bitField0_ & ~0x00008000);
        balanceCF_ = 0L;
        onChanged();
        return this;
      }

      private double bankdoubleFund_ ;
      /**
       * <code>optional double bankdoubleFund = 17;</code>
       */
      public boolean hasBankdoubleFund() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional double bankdoubleFund = 17;</code>
       */
      public double getBankdoubleFund() {
        return bankdoubleFund_;
      }
      /**
       * <code>optional double bankdoubleFund = 17;</code>
       */
      public Builder setBankdoubleFund(double value) {
        bitField0_ |= 0x00010000;
        bankdoubleFund_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bankdoubleFund = 17;</code>
       */
      public Builder clearBankdoubleFund() {
        bitField0_ = (bitField0_ & ~0x00010000);
        bankdoubleFund_ = 0D;
        onChanged();
        return this;
      }

      private double tradingLimit_ ;
      /**
       * <code>optional double tradingLimit = 18;</code>
       */
      public boolean hasTradingLimit() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional double tradingLimit = 18;</code>
       */
      public double getTradingLimit() {
        return tradingLimit_;
      }
      /**
       * <code>optional double tradingLimit = 18;</code>
       */
      public Builder setTradingLimit(double value) {
        bitField0_ |= 0x00020000;
        tradingLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double tradingLimit = 18;</code>
       */
      public Builder clearTradingLimit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tradingLimit_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf.bean.BalanceDetails)
    }

    // @@protoc_insertion_point(class_scope:protobuf.bean.BalanceDetails)
    private static final com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails();
    }

    public static com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BalanceDetails>
        PARSER = new com.google.protobuf.AbstractParser<BalanceDetails>() {
      @java.lang.Override
      public BalanceDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BalanceDetails(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BalanceDetails> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BalanceDetails> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.txtech.services.protobuf.bean.BalanceDetailsProtos.BalanceDetails getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_bean_BalanceDetails_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_bean_BalanceDetails_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"protobuf/bean/balanceDetails.proto\022\rpr" +
      "otobuf.bean\"\205\003\n\016BalanceDetails\022\023\n\013double" +
      "ingPL\030\001 \001(\001\022\017\n\007settled\030\002 \001(\003\022\022\n\ninitMarg" +
      "in\030\003 \001(\001\022\031\n\021maintenanceMargin\030\004 \001(\001\022\017\n\007s" +
      "urplus\030\005 \001(\001\022\020\n\010holdFund\030\006 \001(\001\022\027\n\017totalC" +
      "ollateral\030\007 \001(\001\022\021\n\ttradingPL\030\010 \001(\001\022\023\n\013op" +
      "enBalance\030\t \001(\001\022\022\n\ncommission\030\n \001(\001\022\030\n\020t" +
      "radingFeeLevies\030\013 \001(\001\022\017\n\007deposit\030\014 \001(\001\022\022" +
      "\n\nwithdrawal\030\r \001(\001\022\023\n\013totalEquity\030\016 \001(\001\022" +
      "\021\n\tbalanceBF\030\017 \001(\003\022\021\n\tBalanceCF\030\020 \001(\003\022\026\n" +
      "\016bankdoubleFund\030\021 \001(\001\022\024\n\014tradingLimit\030\022 " +
      "\001(\001B9\n!com.txtech.services.protobuf.bean" +
      "B\024BalanceDetailsProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protobuf_bean_BalanceDetails_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_bean_BalanceDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_bean_BalanceDetails_descriptor,
        new java.lang.String[] { "DoubleingPL", "Settled", "InitMargin", "MaintenanceMargin", "Surplus", "HoldFund", "TotalCollateral", "TradingPL", "OpenBalance", "Commission", "TradingFeeLevies", "Deposit", "Withdrawal", "TotalEquity", "BalanceBF", "BalanceCF", "BankdoubleFund", "TradingLimit", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
